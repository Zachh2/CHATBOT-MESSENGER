const axios = require("axios");
const tiny = require("tinyurl");
async function tiktok(url) {
  const version = require("./package.json").version;
  const pack = (await axios.get("https://registry.npmjs.org/tiktok-down")).data;
  const newVersion = pack['dist-tags'].latest;
  return new Promise(async function (resolve, reject) {
    try {
      axios.post('https://ssstik.io/abc?url=dl', {
        id: url,
        locale: "vi"
      }, {
        headers: {
          "content-type": "multipart/form-data"
        }
      })
        .then(async function (res) {
          const data = res.data
          const author = data.split('<div class="flex-1 result_overlay_buttons">')[0].split('alt=')[1].split("<h2>")[0].split(">")[0].replace('"', "").replace('"', "")
          const title = data.split('<div class="flex-1 result_overlay_buttons">')[0].split('class="maintext"')[1].split("</p>")[0].replace(">", "")
          const urlMp4 = data.split('<div class="flex-1 result_overlay_buttons">')[1].split('a href=')[1].split('class=')[0].replace('"', "").replace('"', "").trim()
          const urlMp3 = data.split('<div class="flex-1 result_overlay_buttons">')[1].split('a href=')[4].split('class=')[0].replace('"', "").replace('"', "").trim();
          const UrlVideo = await tiny.shorten(urlMp4);
          const UrlAudio = await tiny.shorten(urlMp3);
          if (newVersion != version) console.log("-> New Version Available\n-> Use npm i tiktok-down@latest For Update");
          resolve({ author, title, UrlVideo, UrlAudio })
        })
    } catch (e) {
      reject("Đã xảy ra lỗi")
    }
  })
}

module.exports = tiktok